
function [ pdfVal ] = truncDensity(X, dist, lThres, params, returnLogFunc)


belowThreshold = X < lThres;


switch dist
    case 'Lognormal'
        cdfLower         = logncdf(lThres,params(1),params(2));
        pdfVal           = ~belowThreshold.*lognpdf(X,params(1),params(2)) / (1-cdfLower);
        if returnLogFunc
            logPdfVal = belowThreshold.*(-flintmax) + ...
                        ~belowThreshold.*(log(lognpdf(X,params(1),params(2))) - log(1-cdfLower));
        end
        
    case 'Weibull'
        cdfLower        = wblcdf(lThres,params(1),params(2));
        pdfVal          = ~belowThreshold.*  wblpdf(X,params(1),params(2)) / (1-cdfLower);
        if returnLogFunc
            logPdfVal = belowThreshold.*(-flintmax) + ...
                        ~belowThreshold.*log( wblpdf(X,params(1),params(2)) ) - log( 1-cdfLower );
        end
        
    case 'Loglogistic'
        cdfLower        = loglcdf(lThres,params(1),params(2));
        pdfVal          = ~belowThreshold.*loglpdf(X,params(1),params(2)) / (1-cdfLower);
        if returnLogFunc
            logPdfVal = belowThreshold.*(-flintmax) + ...
                        ~belowThreshold.*log(loglpdf(X,params(1),params(2))) - log(1-cdfLower);
        end

    case 'Loggamma'
        cdfLower        = gamcdf(log(lThres),params(1),params(2));
        pdfVal          = ~belowThreshold.*gampdf(log(X),params(1),params(2))./(X*(1-cdfLower)); 
        if returnLogFunc
            logPdfVal = belowThreshold.*(-flintmax) + ...
                        ~belowThreshold.*log(gampdf(log(X),params(1),params(2))) - log(X) - log(1-cdfLower);
        end
        
    case 'Burr' 
        cdfLower        = burrcdf(lThres,params(1),params(2),params(3));
        pdfVal          = ~belowThreshold.*burrpdf(X,params(1),params(2),params(3))/(1-cdfLower);
        if returnLogFunc
            logPdfVal = belowThreshold.*(-flintmax) + ...
                        ~belowThreshold.*log(burrpdf(X,params(1),params(2),params(3))) - log(1-cdfLower);
        end
        
    case 'generalized pareto'
        cdfLower        = gpcdf(lThres,params(1),params(2),lThres);
        pdfVal          = ~belowThreshold.*  gppdf(X,params(1),params(2),lThres) / (1-cdfLower);
        if returnLogFunc
            logPdfVal = belowThreshold.*(-flintmax) + ...
                        ~belowThreshold.*log( gppdf(X,params(1),params(2),lThres) ) - log( 1-cdfLower);
        end
        
    otherwise
        error('Distribution not supported')
end


if returnLogFunc
    pdfVal = logPdfVal;
end

end
